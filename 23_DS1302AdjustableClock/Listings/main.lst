C51 COMPILER V9.54   MAIN                                                                  07/16/2023 22:07:10 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "LCD1602.h"
   3          #include "DS1302.h"
   4          #include "Key.h"
   5          #include "Timer0.h"
   6          
   7          unsigned char KeyNum, MODE, TimeSetSelect, TimeSetFlashFlag;
   8          
   9          /**
  10           * @brief Show time as is increase
  11           * @param None
  12           * @retval None
  13           */
  14          void TimeShow()
  15          {
  16   1        // Show Time
  17   1        DS1302_ReadTime(); // Bug
  18   1        LCD_ShowNum(1, 1, DS1302_Time[0], 2);
  19   1        LCD_ShowNum(1, 4, DS1302_Time[1], 2);
  20   1        LCD_ShowNum(1, 7, DS1302_Time[2], 2);
  21   1        LCD_ShowNum(2, 1, DS1302_Time[3], 2);
  22   1        LCD_ShowNum(2, 4, DS1302_Time[4], 2);
  23   1        LCD_ShowNum(2, 7, DS1302_Time[5], 2);
  24   1      }
  25          
  26          /**
  27           * @brief Set and Show time base on component selected
  28           * @param None
  29           * @retval None
  30           */
  31          void TimeSet()
  32          {
  33   1        // Select which to change
  34   1        if(KeyNum == 2)
  35   1        {
  36   2          TimeSetSelect ++;
  37   2          TimeSetSelect %= 6; // Another way of resetting 0 when overflow
  38   2        }
  39   1        // Increment
  40   1        if(KeyNum == 3)
  41   1        {
  42   2          DS1302_Time[TimeSetSelect] ++;
  43   2          // Fix overflow
  44   2          if (DS1302_Time[0] > 99) {DS1302_Time[0] = 0;} // Year
  45   2          if (DS1302_Time[1] > 12) {DS1302_Time[1] = 1;} // Month
  46   2          // Date Special check
  47   2            // Big Month
  48   2          if (DS1302_Time[1] == 1 || DS1302_Time[1] == 3 ||
  49   2            DS1302_Time[1] == 5 || DS1302_Time[1] == 7 ||
  50   2            DS1302_Time[1] == 8 || DS1302_Time[1] == 10 ||
  51   2            DS1302_Time[1] == 12)
  52   2          {
  53   3            if (DS1302_Time[2] > 31) {DS1302_Time[2] = 1;} 
  54   3          }
C51 COMPILER V9.54   MAIN                                                                  07/16/2023 22:07:10 PAGE 2   

  55   2            // Small Month
  56   2          else if (DS1302_Time[1] == 4 || DS1302_Time[1] == 6 ||
  57   2               DS1302_Time[1] == 9 || DS1302_Time[1] == 11)
  58   2          {
  59   3            if (DS1302_Time[2] > 30) {DS1302_Time[2] = 1;} 
  60   3          }
  61   2            // Feb
  62   2          else if (DS1302_Time[1] == 2)
  63   2          {
  64   3            if (DS1302_Time[0] % 4 == 0)
  65   3            {
  66   4              if (DS1302_Time[2] > 29) {DS1302_Time[2] = 1;}
  67   4            }
  68   3            else
  69   3            {
  70   4              if (DS1302_Time[2] > 28) {DS1302_Time[2] = 1;}
  71   4            }
  72   3          }
  73   2      
  74   2          if (DS1302_Time[3] > 23) {DS1302_Time[3] = 0;} // Hour
  75   2          if (DS1302_Time[4] > 59) {DS1302_Time[4] = 0;} // Minute
  76   2          if (DS1302_Time[5] > 59) {DS1302_Time[5] = 0;} // Second
  77   2        }
  78   1        if(KeyNum == 4)
  79   1        {
  80   2          DS1302_Time[TimeSetSelect] --;
  81   2          
  82   2          // Fix underflow
  83   2          if (DS1302_Time[0] < 0) {DS1302_Time[0] = 99;} // Year
  84   2          if (DS1302_Time[1] < 1) {DS1302_Time[1] = 12;} // Month
  85   2          // Date Special check
  86   2            // Big Month
  87   2          if (DS1302_Time[1] == 1 || DS1302_Time[1] == 3 ||
  88   2            DS1302_Time[1] == 5 || DS1302_Time[1] == 7 ||
  89   2            DS1302_Time[1] == 8 || DS1302_Time[1] == 10 ||
  90   2            DS1302_Time[1] == 12)
  91   2          {
  92   3            if (DS1302_Time[2] < 1) {DS1302_Time[2] = 31;} 
  93   3            if (DS1302_Time[2] > 31) {DS1302_Time[2] = 1;} // Need check overflow too
  94   3          }
  95   2            // Small Month
  96   2          else if (DS1302_Time[1] == 4 || DS1302_Time[1] == 6 ||
  97   2               DS1302_Time[1] == 9 || DS1302_Time[1] == 11)
  98   2          {
  99   3            if (DS1302_Time[2] < 1) {DS1302_Time[2] = 30;} 
 100   3            if (DS1302_Time[2] > 30) {DS1302_Time[2] = 1;} // Need check overflow too
 101   3          }
 102   2            // Feb
 103   2          else if (DS1302_Time[1] == 2)
 104   2          {
 105   3            if (DS1302_Time[0] % 4 == 0)
 106   3            {
 107   4              if (DS1302_Time[2] < 1) {DS1302_Time[2] = 29;}
 108   4              if (DS1302_Time[2] > 29) {DS1302_Time[2] = 1;} // Need check overflow too BUG
 109   4            }
 110   3            else
 111   3            {
 112   4              if (DS1302_Time[2] < 1) {DS1302_Time[2] = 28;}
 113   4              if (DS1302_Time[2] > 28) {DS1302_Time[2] = 1;} // Need check overflow too
 114   4            }
 115   3          }
 116   2      
C51 COMPILER V9.54   MAIN                                                                  07/16/2023 22:07:10 PAGE 3   

 117   2          if (DS1302_Time[3] < 0) {DS1302_Time[3] = 23;} // Hour
 118   2          if (DS1302_Time[4] < 0) {DS1302_Time[4] = 59;} // Minute
 119   2          if (DS1302_Time[5] < 0) {DS1302_Time[5] = 59;} // Second
 120   2        }
 121   1        
 122   1        
 123   1        // Refresh screen
 124   1          // Year
 125   1        if(TimeSetSelect == 0 && TimeSetFlashFlag == 1){LCD_ShowString(1, 1, "  ");} // Flash
 126   1        else{LCD_ShowNum(1, 1, DS1302_Time[0], 2);} // Show
 127   1          // Month
 128   1        if(TimeSetSelect == 1 && TimeSetFlashFlag == 1){LCD_ShowString(1, 4, "  ");} // Flash
 129   1        else{LCD_ShowNum(1, 4, DS1302_Time[1], 2);} // Show
 130   1          // Date
 131   1        if(TimeSetSelect == 2 && TimeSetFlashFlag == 1){LCD_ShowString(1, 7, "  ");} // Flash
 132   1        else{LCD_ShowNum(1, 7, DS1302_Time[2], 2);} // Show
 133   1        
 134   1        // Hour
 135   1        if(TimeSetSelect == 3 && TimeSetFlashFlag == 1){LCD_ShowString(2, 1, "  ");} // Flash
 136   1        else{LCD_ShowNum(2, 1, DS1302_Time[3], 2);} // Show
 137   1          // Minute
 138   1        if(TimeSetSelect == 4 && TimeSetFlashFlag == 1){LCD_ShowString(2, 4, "  ");} // Flash
 139   1        else{LCD_ShowNum(2, 4, DS1302_Time[4], 2);} // Show
 140   1          // Second
 141   1        if(TimeSetSelect == 5 && TimeSetFlashFlag == 1){LCD_ShowString(2, 7, "  ");} // Flash
 142   1        else{LCD_ShowNum(2, 7, DS1302_Time[5], 2);} // Show
 143   1      
 144   1        LCD_ShowNum(2, 10, TimeSetSelect, 2);
 145   1        LCD_ShowNum(2, 13, TimeSetFlashFlag, 2);
 146   1      }
 147          
 148          void main()
 149          {
 150   1        LCD_Init();
 151   1        DS1302_Init();
 152   1        Timer0Init();
 153   1        LCD_ShowString(1, 1, "  -  -  ");
 154   1        LCD_ShowString(2, 1, "  :  :  ");
 155   1        DS1302_SetTime();
 156   1      
 157   1        while(1)
 158   1        {
 159   2          // Read Key and Switch Mode when Pressed first bottom
 160   2          KeyNum = Key();
 161   2          if (KeyNum == 1)
 162   2          {
 163   3            if (MODE == 0) {MODE = 1; TimeSetSelect = 0;} // Do this so start from beginning
 164   3            else if(MODE == 1) {MODE = 0; DS1302_SetTime();} // Set Time on Exit
 165   3          }
 166   2          switch (MODE)
 167   2          {
 168   3            case 0: TimeShow(); break;
 169   3            case 1: TimeSet(); break;
 170   3          }
 171   2        }
 172   1      }
 173          
 174          
 175          /**
 176           * @brief Interupt timer switch between 0 and1 in 1 sec for flagging flashing rate
 177           * @param None
 178           * @retval None
C51 COMPILER V9.54   MAIN                                                                  07/16/2023 22:07:10 PAGE 4   

 179           */
 180          void Timer0_Routine(void) interrupt 1
 181          {
 182   1        static unsigned int T0Count; // Static is not destroyed
 183   1        // Fix the initialization back
 184   1        TL0 = 0x66;   //Initial timer value
 185   1        TH0 = 0xFC;   //Initial timer value
 186   1        
 187   1        T0Count ++;
 188   1        if (T0Count >= 500) // 1s
 189   1        {
 190   2          T0Count = 0;
 191   2          TimeSetFlashFlag = !TimeSetFlashFlag; // Flip flashing flag 0, 1
 192   2        }
 193   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1000    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
