C51 COMPILER V9.54   DS1302                                                                07/16/2023 22:07:10 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS
                    -1302.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          // Define Register
   4          sbit DS1302_SCLK = P3^6;
   5          sbit DS1302_IO = P3^4;
   6          sbit DS1302_CE = P3^5;
   7          
   8          
   9          // These Address are for write, conde in read has |= 0x01 to make them into read
  10          #define DS1302_SECOND   0x80
  11          #define DS1302_MINUTE   0x82
  12          #define DS1302_HOUR     0x84
  13          #define DS1302_DATE     0x86
  14          #define DS1302_MONTH    0x88
  15          #define DS1302_DAY      0x8A
  16          #define DS1302_YEAR     0x8C
  17          #define DS1302_WP     0x8E
  18          
  19          unsigned char DS1302_Time[] = {23, 7, 16, 12, 59, 55, 7};
  20          
  21          /**
  22           * @brief Initialize DS1302, put all Register to 0 
  23           * @param None
  24           * @retval None
  25           */
  26          void DS1302_Init()
  27          {
  28   1        DS1302_CE = 0;
  29   1        DS1302_SCLK = 0;
  30   1      }
  31          
  32          
  33          /**
  34           * @brief Write a Byte into the DS1302 based the time diagram
  35           * @param Command: Specify which register to write to
  36           * @param Data: Specify what to write
  37           * @retval None
  38           */
  39          void DS1302_WriteByte(unsigned char Command, Data)
  40          {
  41   1        unsigned char i;
  42   1        DS1302_CE = 1; // Enable
  43   1        
  44   1        // Input Byte Command
  45   1        for (i = 0; i < 8; i ++)
  46   1        {
  47   2        // Input one bit
  48   2        DS1302_IO = Command&(0x01<<i); // 0000 0001
  49   2        // Move Clock
  50   2        DS1302_SCLK = 1; // May need a dalay is Hz is high
  51   2        DS1302_SCLK = 0;
  52   2        } 
  53   1        
  54   1        
C51 COMPILER V9.54   DS1302                                                                07/16/2023 22:07:10 PAGE 2   

  55   1        // Input Byte Data
  56   1        for (i = 0; i < 8; i ++)
  57   1        {
  58   2        // Input one bit
  59   2        DS1302_IO = Data&(0x01<<i); // 0000 0001
  60   2        // Move Clock
  61   2        DS1302_SCLK = 1; // May need a dalay is Hz is high
  62   2        DS1302_SCLK = 0;
  63   2        } 
  64   1        
  65   1        DS1302_CE = 0; // Diable
  66   1      }
  67          
  68          /**
  69           * @brief Read a Byte of Data from DS1302
  70           * @param Command: Specify where the data should be read
  71           * @retval unsigned char: The Byte of data in DS1302
  72           */
  73          unsigned char DS1302_ReadByte(unsigned char Command)
  74          {
  75   1        // This has one less period
  76   1        unsigned char i, Data = 0x00;
  77   1        Command |= 0x01; // Make sure it is read
  78   1        DS1302_CE = 1; // Enable
  79   1        
  80   1        // Input Byte Command
  81   1        for (i = 0; i < 8; i ++)
  82   1        {
  83   2        // Input one bit
  84   2        DS1302_IO = Command&(0x01<<i); // 0000 0001
  85   2        // Move Clock
  86   2        DS1302_SCLK = 0; // !!!! This make clock end in middle of down up
  87   2        DS1302_SCLK = 1; 
  88   2        }
  89   1        
  90   1        // Give control to DS1302, Load Data in to return
  91   1        for (i = 0; i < 8; i ++)
  92   1        {
  93   2          DS1302_SCLK = 1; // Althuogh Doubled, this order make sense
  94   2          DS1302_SCLK = 0;
  95   2          if (DS1302_IO){Data = Data|(0x01<<i);}
  96   2        }
  97   1        
  98   1        DS1302_CE = 0; // Disable
  99   1        DS1302_IO = 0;
 100   1        return Data;
 101   1      }
 102          
 103          /**
 104           * @brief Set the tyme of DS1302 using the time array
 105           * @param None
 106           * @retval None
 107           */
 108          void DS1302_SetTime()
 109          {
 110   1        DS1302_WriteByte(DS1302_WP, 0x00); // Disable Write Protection
 111   1        DS1302_WriteByte(DS1302_YEAR, DS1302_Time[0]/10*16 + DS1302_Time[0]%10); // DEC to BCD
 112   1        DS1302_WriteByte(DS1302_MONTH, DS1302_Time[1]/10*16 + DS1302_Time[1]%10);
 113   1        DS1302_WriteByte(DS1302_DATE, DS1302_Time[2]/10*16 + DS1302_Time[2]%10);
 114   1        DS1302_WriteByte(DS1302_HOUR, DS1302_Time[3]/10*16 + DS1302_Time[3]%10);
 115   1        DS1302_WriteByte(DS1302_MINUTE, DS1302_Time[4]/10*16 + DS1302_Time[4]%10);
 116   1        DS1302_WriteByte(DS1302_SECOND, DS1302_Time[5]/10*16 + DS1302_Time[5]%10);
C51 COMPILER V9.54   DS1302                                                                07/16/2023 22:07:10 PAGE 3   

 117   1        DS1302_WriteByte(DS1302_DAY, DS1302_Time[6]/10*16 + DS1302_Time[6]%10);
 118   1        DS1302_WriteByte(DS1302_WP, 0x80); // Enable Write Protection
 119   1      }
 120          
 121          /**
 122           * @brief Read the time in BCD to DEC from DS1302 into the Time array
 123           * @param None
 124           * @retval None
 125           */
 126          void DS1302_ReadTime()
 127          {
 128   1        unsigned char Temp;
 129   1        Temp = DS1302_ReadByte(DS1302_YEAR);
 130   1        DS1302_Time[0] = Temp / 16 * 10 + Temp % 16; // BCD to DEC
 131   1        Temp = DS1302_ReadByte(DS1302_MONTH);
 132   1        DS1302_Time[1] = Temp / 16 * 10 + Temp % 16; 
 133   1        Temp = DS1302_ReadByte(DS1302_DATE);
 134   1        DS1302_Time[2] = Temp / 16 * 10 + Temp % 16; 
 135   1        Temp = DS1302_ReadByte(DS1302_HOUR);
 136   1        DS1302_Time[3] = Temp / 16 * 10 + Temp % 16; 
 137   1        Temp = DS1302_ReadByte(DS1302_MINUTE);
 138   1        DS1302_Time[4] = Temp / 16 * 10 + Temp % 16; 
 139   1        Temp = DS1302_ReadByte(DS1302_SECOND);
 140   1        DS1302_Time[5] = Temp / 16 * 10 + Temp % 16; 
 141   1        Temp = DS1302_ReadByte(DS1302_DAY);
 142   1        DS1302_Time[6] = Temp / 16 * 10 + Temp % 16; 
 143   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    551    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
